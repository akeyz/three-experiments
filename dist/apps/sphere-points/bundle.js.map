{"version":3,"sources":["webpack:///webpack/bootstrap e506698035f11f3deffa?a72a********","webpack:///./src/apps/sphere-points/index.js"],"names":["SCREEN_WIDTH","window","innerWidth","SCREEN_HEIGHT","innerHeight","VIEW_ANGLE","ASPECT","NEAR","FAR","scene","camera","renderer","axisHelper","gridHelper","geometry","material","mesh","controls","pointLight","ambientLight","origin","THREE","Vector3","init","Scene","GridHelper","add","AxisHelper","PerspectiveCamera","position","set","lookAt","SphereGeometry","MeshLambertMaterial","color","radius","intervals","phi0","Math","PI","phi1","phiDelta","theta0","theta1","thetaDelta","phi","theta","x","sin","cos","y","z","Mesh","AmbientLight","PointLight","WebGLRenderer","setSize","OrbitControls","domElement","THREEx","WindowResize","document","body","appendChild","animate","requestAnimationFrame","update","render"],"mappings":"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","file":"dist/apps/sphere-points/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e506698035f11f3deffa","const SCREEN_WIDTH = window.innerWidth;\nconst SCREEN_HEIGHT = window.innerHeight;\nconst VIEW_ANGLE = 45;\nconst ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT;\nconst NEAR = 1;\nconst FAR = 10000;\n\nlet scene;\nlet camera;\nlet renderer;\nlet axisHelper;\nlet gridHelper;\nlet geometry;\nlet material;\nlet mesh;\nlet controls;\nlet pointLight;\nlet ambientLight;\n\nconst origin = new THREE.Vector3(0, 0, 0);\n\nfunction init() {\n  scene = new THREE.Scene();\n\n  gridHelper = new THREE.GridHelper(100, 10);\n  scene.add(gridHelper);\n\n  axisHelper = new THREE.AxisHelper(100);\n  scene.add(axisHelper);\n\n  camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);\n  camera.position.set(200, 200, 200);\n  camera.lookAt(origin);\n\n  geometry = new THREE.SphereGeometry(1, 32, 32);\n  material = new THREE.MeshLambertMaterial({ color: 0xffffff });\n\n  // https://en.wikipedia.org/wiki/Spherical_coordinate_system\n  // http://stackoverflow.com/questions/969798/plotting-a-point-on-the-edge-of-a-sphere\n\n  const radius = 100;\n  const intervals = 10;\n\n  // phi is the angle on the xy plane\n  // [0, 2PI]\n  const phi0 = Math.PI * (0 / 4);\n  const phi1 = Math.PI * (2 / 4);\n  const phiDelta = (phi1 - phi0) / intervals;\n\n  // theta is the angle from the z axis\n  // [0, PI]\n  const theta0 = Math.PI * (0 / 2);\n  const theta1 = Math.PI * (2 / 4);\n  const thetaDelta = (theta1 - theta0) / intervals;\n\n  // let count = 0;\n  for (let phi = phi0; phi <= phi1; phi += phiDelta) {\n    for (let theta = theta0; theta <= theta1; theta += thetaDelta) {\n      // count += 1;\n      // console.log(count);\n      const x = radius * Math.sin(theta) * Math.cos(phi);\n      const y = radius * Math.sin(theta) * Math.sin(phi);\n      const z = radius * Math.cos(theta);\n      mesh = new THREE.Mesh(geometry, material);\n      mesh.position.set(x, y, z);\n      scene.add(mesh);\n    }\n  }\n\n  ambientLight = new THREE.AmbientLight(0x444444);\n  scene.add(ambientLight);\n\n  pointLight = new THREE.PointLight(0xffffff, 1, 1000);\n  pointLight.position.set(50, 50, 50);\n  scene.add(pointLight);\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n  controls = new THREE.OrbitControls(camera, renderer.domElement);\n\n  THREEx.WindowResize(renderer, camera);\n\n  document.body.appendChild(renderer.domElement);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  controls.update();\n  renderer.render(scene, camera);\n}\n\ninit();\nanimate();\n\n\n\n// WEBPACK FOOTER //\n// ./src/apps/sphere-points/index.js"],"sourceRoot":""}